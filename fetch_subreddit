#!/usr/bin/env perl

    use JSON::XS;
    use LWP::Simple;
    use utf8;
    use Encode;

    use lib './lib';
    use My::Schema;

    use Data::Dumper;

my $subreddit = shift @ARGV
    or die "Specify a subreddit.\n";

my $json_encoder = JSON::XS->new->utf8;

my $user     = 'excavator';
my $password = 'excavator';
my $schema = My::Schema->connect('dbi:mysql:database=excavator;host=localhost', $user, $password, 
        { mysql_enable_utf8 => 1} );

$schema->storage->_do_query("SET CHARACTER SET utf8mb4");         # fix bug with inserting 4-byte UTF-8 characters in MySQL


my @data = fetch_subreddit($subreddit);




# Only fetches links, doesn't fetch comments.
sub fetch_subreddit {
    my ($subreddit) = @_;

    my %combined_data_children;

    my @data = reddit_fetch_1000("https://www.reddit.com/r/$subreddit.json");

    #my $json_out = {data => {children => \@data}};
    #my $filename_out = "$subreddit.json";
    #open my $fout, '>', $filename_out   or die $!;
    #print $fout $json_encoder->encode($json_out);
    #close $fout;

    foreach my $datum (@data) {
        my $d = $datum->{data};

        $schema->resultset('Subreddit')->find_or_new(
            {
                id            => $d->{subreddit_id},
                subredditname => $d->{subreddit},
                banned        => 0,
            } )->insert;

        $schema->resultset('Account')->find_or_new(
            {
                accountname => $d->{author},
            } )->insert;

        $schema->resultset('Domain')->find_or_new(
            {
                domain => $d->{domain},
            } )->insert;

        $schema->resultset('Link')->find_or_new(
            {
                id        => $d->{id},
                title     => $d->{title},
                url       => $d->{is_self} ? "" : $d->{url},
                domain    => $d->{is_self} ? "" : $d->{domain},
                selftext  => $d->{selftext},
                account   => $d->{author},
                subreddit => $d->{subreddit},
            } )->insert;

    }

    print "Downloaded ", scalar(@data), " records.\n";

    return @data;
}





# fetch as many posts as possible, clicking "next" as many times as is necessary
sub reddit_fetch_1000 {
    my ($url) = @_;

    #(my $display_url = $url) =~ s#^.*/##;
    my $display_url = $url;
    print "======== $display_url ========\n";

    # prepare the URL for appending of the count
    if ($url =~ /\?/) {
        $url .= "&";
    } else {
        $url .= "?";
    }

    my @data_children;

    my $after = undef;
    while (1) {
        my $count = scalar(@data_children);
            #if ($count > 50) {
            #    print "REMOVE ME  (\$count > 50)\n";
            #    last;
            #}
        printf "\r                                        \r\t>  %2d",     $count;
        my $this_url = $url;
        $this_url .= "?count=$count&after=$after"    if defined($after);
        my $response = LWP::Simple::get($this_url)
                or last;
        #sleep 2;
        my $json = $json_encoder->decode( Encode::encode_utf8($response));
        last unless $json->{data}{children};
        push(@data_children, @{$json->{data}{children}});

        $after = $json->{data}{after}   or last;
    }
    print "\r                                        \r";

    return @data_children;
}


